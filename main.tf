provider "aws" {
  region = "ap-south-1"
}

resource "aws_vpc" "my_vpc" {
  cidr_block = "10.0.0.0/16"
  enable_dns_hostnames = true
  enable_dns_support = true
  assign_generated_ipv6_cidr_block = false
  instance_tenancy = "default"
  tags = {
    Name = "AutoGeneratedVPC"
  }
}

resource "aws_subnet" "public_subnet_1" {
  vpc_id = aws_vpc.my_vpc
  cidr_block = "10.0.1.0/24"
  availability_zone = "ap-south-1a"
  map_public_ip_on_launch = true
}

resource "aws_subnet" "public_subnet_2" {
  vpc_id = aws_vpc.my_vpc
  cidr_block = "10.0.2.0/24"
  availability_zone = "ap-south-1b"
  map_public_ip_on_launch = true
}

resource "aws_subnet" "private_subnet_1" {
  vpc_id = aws_vpc.my_vpc
  cidr_block = "10.0.3.0/24"
  availability_zone = "ap-south-1a"
}

resource "aws_subnet" "private_subnet_2" {
  vpc_id = aws_vpc.my_vpc
  cidr_block = "10.0.4.0/24"
  availability_zone = "ap-south-1b"
}

resource "aws_nat_gateway" "nat_gateway" {
    count = 2
    allocation_id = aws_eip.nat_eip[count.index].id
    subnet_id = aws_subnet.public_subnet_1.id
}

resource "aws_eip" "nat_eip" {
  count = 2
  vpc = true
}

resource "aws_vpc_endpoint" "s3_endpoint" {
  vpc_id = aws_vpc.my_vpc
  service_name = "com.amazonaws.ap-south-1.s3"
  vpc_endpoint_type = "gateway"
}

output "vpc_id" {
  value = aws_vpc.my_vpc.id
}